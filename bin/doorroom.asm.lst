------- FILE doorroom.asm LEVEL 1 PASS 2
      1  fffe					      processor	6502
      2  10000 ????
      3  10000 ????						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      4  10000 ????						;; Include required files with definitions and macros
      5  10000 ????						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
------- FILE vcs.h LEVEL 2 PASS 2
      0  10000 ????				       include	"vcs.h"
      1  10000 ????						; VCS.H
      2  10000 ????						; Version 1.05, 13/November/2003
      3  10000 ????
      4  10000 ????		00 69	    VERSION_VCS =	105
      5  10000 ????
      6  10000 ????						; THIS IS A PRELIMINARY RELEASE OF *THE* "STANDARD" VCS.H
      7  10000 ????						; THIS FILE IS EXPLICITLY SUPPORTED AS A DASM-PREFERRED COMPANION FILE
      8  10000 ????						; PLEASE DO *NOT* REDISTRIBUTE THIS FILE!
      9  10000 ????						;
     10  10000 ????						; This file defines hardware registers and memory mapping for the
     11  10000 ????						; Atari 2600. It is distributed as a companion machine-specific support package
     12  10000 ????						; for the DASM compiler. Updates to this file, DASM, and associated tools are
     13  10000 ????						; available at at http://www.atari2600.org/dasm
     14  10000 ????						;
     15  10000 ????						; Many thanks to the original author(s) of this file, and to everyone who has
     16  10000 ????						; contributed to understanding the Atari 2600.  If you take issue with the
     17  10000 ????						; contents, or naming of registers, please write to me (atari2600@taswegian.com)
     18  10000 ????						; with your views.  Please contribute, if you think you can improve this
     19  10000 ????						; file!
     20  10000 ????						;
     21  10000 ????						; Latest Revisions...
     22  10000 ????						; 1.05  13/NOV/2003	  - Correction to 1.04 - now functions as requested by MR.
     23  10000 ????						;			  - Added VERSION_VCS equate (which will reflect 100x version #)
     24  10000 ????						;			    This will allow conditional code to verify VCS.H being
     25  10000 ????						;			    used for code assembly.
     26  10000 ????						; 1.04  12/NOV/2003	 Added TIA_BASE_WRITE_ADDRESS and TIA_BASE_READ_ADDRESS for
     27  10000 ????						;			 convenient disassembly/reassembly compatibility for hardware
     28  10000 ????						;			 mirrored reading/writing differences.	This is more a 
     29  10000 ????						;			 readability issue, and binary compatibility with disassembled
     30  10000 ????						;			 and reassembled sources.  Per Manuel Rotschkar's suggestion.
     31  10000 ????						; 1.03  12/MAY/2003	 Added SEG segment at end of file to fix old-code compatibility
     32  10000 ????						;			 which was broken by the use of segments in this file, as
     33  10000 ????						;			 reported by Manuel Polik on [stella] 11/MAY/2003
     34  10000 ????						; 1.02  22/MAR/2003	 Added TIMINT($285)
     35  10000 ????						; 1.01				Constant offset added to allow use for 3F-style bankswitching
     36  10000 ????						;						 - define TIA_BASE_ADDRESS as $40 for Tigervision carts, otherwise
     37  10000 ????						;						   it is safe to leave it undefined, and the base address will
     38  10000 ????						;						   be set to 0.  Thanks to Eckhard Stolberg for the suggestion.
     39  10000 ????						;			    Note, may use -DLABEL=EXPRESSION to define TIA_BASE_ADDRESS
     40  10000 ????						;			  - register definitions are now generated through assignment
     41  10000 ????						;			    in uninitialised segments.	This allows a changeable base
     42  10000 ????						;			    address architecture.
     43  10000 ????						; 1.0	22/MAR/2003		Initial release
     44  10000 ????
     45  10000 ????
     46  10000 ????						;-------------------------------------------------------------------------------
     47  10000 ????
     48  10000 ????						; TIA_BASE_ADDRESS
     49  10000 ????						; The TIA_BASE_ADDRESS defines the base address of access to TIA registers.
     50  10000 ????						; Normally 0, the base address should (externally, before including this file)
     51  10000 ????						; be set to $40 when creating 3F-bankswitched (and other?) cartridges.
     52  10000 ????						; The reason is that this bankswitching scheme treats any access to locations
     53  10000 ????						; < $40 as a bankswitch.
     54  10000 ????
     55  10000 ????			   -	       IFNCONST	TIA_BASE_ADDRESS
     56  10000 ????			   -TIA_BASE_ADDRESS =	0
     57  10000 ????				       ENDIF
     58  10000 ????
     59  10000 ????						; Note: The address may be defined on the command-line using the -D switch, eg:
     60  10000 ????						; dasm.exe code.asm -DTIA_BASE_ADDRESS=$40 -f3 -v5 -ocode.bin
     61  10000 ????						; *OR* by declaring the label before including this file, eg:
     62  10000 ????						; TIA_BASE_ADDRESS = $40
     63  10000 ????						;   include "vcs.h"
     64  10000 ????
     65  10000 ????						; Alternate read/write address capability - allows for some disassembly compatibility
     66  10000 ????						; usage ; to allow reassembly to binary perfect copies).  This is essentially catering
     67  10000 ????						; for the mirrored ROM hardware registers.
     68  10000 ????
     69  10000 ????						; Usage: As per above, define the TIA_BASE_READ_ADDRESS and/or TIA_BASE_WRITE_ADDRESS
     70  10000 ????						; using the -D command-line switch, as required.  If the addresses are not defined, 
     71  10000 ????						; they defaut to the TIA_BASE_ADDRESS.
     72  10000 ????
     73  10000 ????			   -	       IFNCONST	TIA_BASE_READ_ADDRESS
     74  10000 ????			   -TIA_BASE_READ_ADDRESS =	TIA_BASE_ADDRESS
     75  10000 ????				       ENDIF
     76  10000 ????
     77  10000 ????			   -	       IFNCONST	TIA_BASE_WRITE_ADDRESS
     78  10000 ????			   -TIA_BASE_WRITE_ADDRESS =	TIA_BASE_ADDRESS
     79  10000 ????				       ENDIF
     80  10000 ????
     81  10000 ????						;-------------------------------------------------------------------------------
     82  10000 ????
     83 U002d ????				      SEG.U	TIA_REGISTERS_WRITE
     84 U0000					      ORG	TIA_BASE_WRITE_ADDRESS
     85 U0000
     86 U0000							; DO NOT CHANGE THE RELATIVE ORDERING OF REGISTERS!
     87 U0000
     88 U0000		       00	   VSYNC      ds	1	; $00	 0000 00x0   Vertical Sync Set-Clear
     89 U0001		       00	   VBLANK     ds	1	; $01	 xx00 00x0   Vertical Blank Set-Clear
     90 U0002		       00	   WSYNC      ds	1	; $02	 ---- ----   Wait for Horizontal Blank
     91 U0003		       00	   RSYNC      ds	1	; $03	 ---- ----   Reset Horizontal Sync Counter
     92 U0004		       00	   NUSIZ0     ds	1	; $04	 00xx 0xxx   Number-Size player/missle 0
     93 U0005		       00	   NUSIZ1     ds	1	; $05	 00xx 0xxx   Number-Size player/missle 1
     94 U0006		       00	   COLUP0     ds	1	; $06	 xxxx xxx0   Color-Luminance Player 0
     95 U0007		       00	   COLUP1     ds	1	; $07	 xxxx xxx0   Color-Luminance Player 1
     96 U0008		       00	   COLUPF     ds	1	; $08	 xxxx xxx0   Color-Luminance Playfield
     97 U0009		       00	   COLUBK     ds	1	; $09	 xxxx xxx0   Color-Luminance Background
     98 U000a		       00	   CTRLPF     ds	1	; $0A	 00xx 0xxx   Control Playfield, Ball, Collisions
     99 U000b		       00	   REFP0      ds	1	; $0B	 0000 x000   Reflection Player 0
    100 U000c		       00	   REFP1      ds	1	; $0C	 0000 x000   Reflection Player 1
    101 U000d		       00	   PF0	      ds	1	; $0D	 xxxx 0000   Playfield Register Byte 0
    102 U000e		       00	   PF1	      ds	1	; $0E	 xxxx xxxx   Playfield Register Byte 1
    103 U000f		       00	   PF2	      ds	1	; $0F	 xxxx xxxx   Playfield Register Byte 2
    104 U0010		       00	   RESP0      ds	1	; $10	 ---- ----   Reset Player 0
    105 U0011		       00	   RESP1      ds	1	; $11	 ---- ----   Reset Player 1
    106 U0012		       00	   RESM0      ds	1	; $12	 ---- ----   Reset Missle 0
    107 U0013		       00	   RESM1      ds	1	; $13	 ---- ----   Reset Missle 1
    108 U0014		       00	   RESBL      ds	1	; $14	 ---- ----   Reset Ball
    109 U0015		       00	   AUDC0      ds	1	; $15	 0000 xxxx   Audio Control 0
    110 U0016		       00	   AUDC1      ds	1	; $16	 0000 xxxx   Audio Control 1
    111 U0017		       00	   AUDF0      ds	1	; $17	 000x xxxx   Audio Frequency 0
    112 U0018		       00	   AUDF1      ds	1	; $18	 000x xxxx   Audio Frequency 1
    113 U0019		       00	   AUDV0      ds	1	; $19	 0000 xxxx   Audio Volume 0
    114 U001a		       00	   AUDV1      ds	1	; $1A	 0000 xxxx   Audio Volume 1
    115 U001b		       00	   GRP0       ds	1	; $1B	 xxxx xxxx   Graphics Register Player 0
    116 U001c		       00	   GRP1       ds	1	; $1C	 xxxx xxxx   Graphics Register Player 1
    117 U001d		       00	   ENAM0      ds	1	; $1D	 0000 00x0   Graphics Enable Missle 0
    118 U001e		       00	   ENAM1      ds	1	; $1E	 0000 00x0   Graphics Enable Missle 1
    119 U001f		       00	   ENABL      ds	1	; $1F	 0000 00x0   Graphics Enable Ball
    120 U0020		       00	   HMP0       ds	1	; $20	 xxxx 0000   Horizontal Motion Player 0
    121 U0021		       00	   HMP1       ds	1	; $21	 xxxx 0000   Horizontal Motion Player 1
    122 U0022		       00	   HMM0       ds	1	; $22	 xxxx 0000   Horizontal Motion Missle 0
    123 U0023		       00	   HMM1       ds	1	; $23	 xxxx 0000   Horizontal Motion Missle 1
    124 U0024		       00	   HMBL       ds	1	; $24	 xxxx 0000   Horizontal Motion Ball
    125 U0025		       00	   VDELP0     ds	1	; $25	 0000 000x   Vertical Delay Player 0
    126 U0026		       00	   VDELP1     ds	1	; $26	 0000 000x   Vertical Delay Player 1
    127 U0027		       00	   VDELBL     ds	1	; $27	 0000 000x   Vertical Delay Ball
    128 U0028		       00	   RESMP0     ds	1	; $28	 0000 00x0   Reset Missle 0 to Player 0
    129 U0029		       00	   RESMP1     ds	1	; $29	 0000 00x0   Reset Missle 1 to Player 1
    130 U002a		       00	   HMOVE      ds	1	; $2A	 ---- ----   Apply Horizontal Motion
    131 U002b		       00	   HMCLR      ds	1	; $2B	 ---- ----   Clear Horizontal Move Registers
    132 U002c		       00	   CXCLR      ds	1	; $2C	 ---- ----   Clear Collision Latches
    133 U002d
    134 U002d							;-------------------------------------------------------------------------------
    135 U002d
    136 U000e ????				      SEG.U	TIA_REGISTERS_READ
    137 U0000					      ORG	TIA_BASE_READ_ADDRESS
    138 U0000
    139 U0000							;											bit 7	 bit 6
    140 U0000		       00	   CXM0P      ds	1	; $00	     xx00 0000	     Read Collision  M0-P1   M0-P0
    141 U0001		       00	   CXM1P      ds	1	; $01	     xx00 0000			     M1-P0   M1-P1
    142 U0002		       00	   CXP0FB     ds	1	; $02	     xx00 0000			     P0-PF   P0-BL
    143 U0003		       00	   CXP1FB     ds	1	; $03	     xx00 0000			     P1-PF   P1-BL
    144 U0004		       00	   CXM0FB     ds	1	; $04	     xx00 0000			     M0-PF   M0-BL
    145 U0005		       00	   CXM1FB     ds	1	; $05	     xx00 0000			     M1-PF   M1-BL
    146 U0006		       00	   CXBLPF     ds	1	; $06	     x000 0000			     BL-PF   -----
    147 U0007		       00	   CXPPMM     ds	1	; $07	     xx00 0000			     P0-P1   M0-M1
    148 U0008		       00	   INPT0      ds	1	; $08	     x000 0000	     Read Pot Port 0
    149 U0009		       00	   INPT1      ds	1	; $09	     x000 0000	     Read Pot Port 1
    150 U000a		       00	   INPT2      ds	1	; $0A	     x000 0000	     Read Pot Port 2
    151 U000b		       00	   INPT3      ds	1	; $0B	     x000 0000	     Read Pot Port 3
    152 U000c		       00	   INPT4      ds	1	; $0C		x000 0000	 Read Input (Trigger) 0
    153 U000d		       00	   INPT5      ds	1	; $0D		x000 0000	 Read Input (Trigger) 1
    154 U000e
    155 U000e							;-------------------------------------------------------------------------------
    156 U000e
    157 U0298 ????				      SEG.U	RIOT
    158 U0280					      ORG	$280
    159 U0280
    160 U0280							; RIOT MEMORY MAP
    161 U0280
    162 U0280		       00	   SWCHA      ds	1	; $280      Port A data register for joysticks:
    163 U0281							;			Bits 4-7 for player 1.  Bits 0-3 for player 2.
    164 U0281
    165 U0281		       00	   SWACNT     ds	1	; $281      Port A data direction register (DDR)
    166 U0282		       00	   SWCHB      ds	1	; $282		Port B data (console switches)
    167 U0283		       00	   SWBCNT     ds	1	; $283      Port B DDR
    168 U0284		       00	   INTIM      ds	1	; $284		Timer output
    169 U0285
    170 U0285		       00	   TIMINT     ds	1	; $285
    171 U0286
    172 U0286							; Unused/undefined registers ($285-$294)
    173 U0286
    174 U0286		       00		      ds	1	; $286
    175 U0287		       00		      ds	1	; $287
    176 U0288		       00		      ds	1	; $288
    177 U0289		       00		      ds	1	; $289
    178 U028a		       00		      ds	1	; $28A
    179 U028b		       00		      ds	1	; $28B
    180 U028c		       00		      ds	1	; $28C
    181 U028d		       00		      ds	1	; $28D
    182 U028e		       00		      ds	1	; $28E
    183 U028f		       00		      ds	1	; $28F
    184 U0290		       00		      ds	1	; $290
    185 U0291		       00		      ds	1	; $291
    186 U0292		       00		      ds	1	; $292
    187 U0293		       00		      ds	1	; $293
    188 U0294
    189 U0294		       00	   TIM1T      ds	1	; $294		set 1 clock interval
    190 U0295		       00	   TIM8T      ds	1	; $295      set 8 clock interval
    191 U0296		       00	   TIM64T     ds	1	; $296      set 64 clock interval
    192 U0297		       00	   T1024T     ds	1	; $297      set 1024 clock interval
    193 U0298
    194 U0298							;-------------------------------------------------------------------------------
    195 U0298							; The following required for back-compatibility with code which does not use
    196 U0298							; segments.
    197 U0298
    198  0000 ????				      SEG
    199  0000 ????
    200  0000 ????						; EOF
------- FILE doorroom.asm
------- FILE macro.h LEVEL 2 PASS 2
      0  0000 ????				      include	"macro.h"
      1  0000 ????						; MACRO.H
      2  0000 ????						; Version 1.06, 3/SEPTEMBER/2004
      3  0000 ????
      4  0000 ????	       00 6a	   VERSION_MACRO =	106
      5  0000 ????
      6  0000 ????						;
      7  0000 ????						; THIS FILE IS EXPLICITLY SUPPORTED AS A DASM-PREFERRED COMPANION FILE
      8  0000 ????						; PLEASE DO *NOT* REDISTRIBUTE MODIFIED VERSIONS OF THIS FILE!
      9  0000 ????						;
     10  0000 ????						; This file defines DASM macros useful for development for the Atari 2600.
     11  0000 ????						; It is distributed as a companion machine-specific support package
     12  0000 ????						; for the DASM compiler. Updates to this file, DASM, and associated tools are
     13  0000 ????						; available at at http://www.atari2600.org/dasm
     14  0000 ????						;
     15  0000 ????						; Many thanks to the people who have contributed.  If you take issue with the
     16  0000 ????						; contents, or would like to add something, please write to me
     17  0000 ????						; (atari2600@taswegian.com) with your contribution.
     18  0000 ????						;
     19  0000 ????						; Latest Revisions...
     20  0000 ????						;
     21  0000 ????						; 1.06  03/SEP/2004	 - nice revision of VERTICAL_BLANK (Edwin Blink)
     22  0000 ????						; 1.05  14/NOV/2003	 - Added VERSION_MACRO equate (which will reflect 100x version #)
     23  0000 ????						;			   This will allow conditional code to verify MACRO.H being
     24  0000 ????						;			   used for code assembly.
     25  0000 ????						; 1.04  13/NOV/2003	 - SET_POINTER macro added (16-bit address load)
     26  0000 ????						;
     27  0000 ????						; 1.03  23/JUN/2003	 - CLEAN_START macro added - clears TIA, RAM, registers
     28  0000 ????						;
     29  0000 ????						; 1.02  14/JUN/2003	 - VERTICAL_SYNC macro added
     30  0000 ????						;			   (standardised macro for vertical synch code)
     31  0000 ????						; 1.01  22/MAR/2003	 - SLEEP macro added. 
     32  0000 ????						;			 - NO_ILLEGAL_OPCODES switch implemented
     33  0000 ????						; 1.0	22/MAR/2003		Initial release
     34  0000 ????
     35  0000 ????						; Note: These macros use illegal opcodes.  To disable illegal opcode usage, 
     36  0000 ????						;   define the symbol NO_ILLEGAL_OPCODES (-DNO_ILLEGAL_OPCODES=1 on command-line).
     37  0000 ????						;   If you do not allow illegal opcode usage, you must include this file 
     38  0000 ????						;   *after* including VCS.H (as the non-illegal opcodes access hardware
     39  0000 ????						;   registers and require them to be defined first).
     40  0000 ????
     41  0000 ????						; Available macros...
     42  0000 ????						;   SLEEP n		 - sleep for n cycles
     43  0000 ????						;   VERTICAL_SYNC	 - correct 3 scanline vertical synch code
     44  0000 ????						;   CLEAN_START	 - set machine to known state on startup
     45  0000 ????						;   SET_POINTER	 - load a 16-bit absolute to a 16-bit variable
     46  0000 ????
     47  0000 ????						;-------------------------------------------------------------------------------
     48  0000 ????						; SLEEP duration
     49  0000 ????						; Original author: Thomas Jentzsch
     50  0000 ????						; Inserts code which takes the specified number of cycles to execute.	This is
     51  0000 ????						; useful for code where precise timing is required.
     52  0000 ????						; ILLEGAL-OPCODE VERSION DOES NOT AFFECT FLAGS OR REGISTERS.
     53  0000 ????						; LEGAL OPCODE VERSION MAY AFFECT FLAGS
     54  0000 ????						; Uses illegal opcode (DASM 2.20.01 onwards).
     55  0000 ????
     56  0000 ????				      MAC	sleep
     57  0000 ????			   .CYCLES    SET	{1}
     58  0000 ????
     59  0000 ????				      IF	.CYCLES < 2
     60  0000 ????				      ECHO	"MACRO ERROR: 'SLEEP': Duration must be > 1"
     61  0000 ????				      ERR
     62  0000 ????				      ENDIF
     63  0000 ????
     64  0000 ????				      IF	.CYCLES & 1
     65  0000 ????				      IFNCONST	NO_ILLEGAL_OPCODES
     66  0000 ????				      nop	0
     67  0000 ????				      ELSE
     68  0000 ????				      bit	VSYNC
     69  0000 ????				      ENDIF
     70  0000 ????			   .CYCLES    SET	.CYCLES - 3
     71  0000 ????				      ENDIF
     72  0000 ????
     73  0000 ????				      REPEAT	.CYCLES / 2
     74  0000 ????				      nop
     75  0000 ????				      REPEND
     76  0000 ????				      ENDM		;usage: SLEEP n (n>1)
     77  0000 ????
     78  0000 ????						;-------------------------------------------------------------------------------
     79  0000 ????						; VERTICAL_SYNC
     80  0000 ????						; revised version by Edwin Blink -- saves bytes!
     81  0000 ????						; Inserts the code required for a proper 3 scanline vertical sync sequence
     82  0000 ????						; Note: Alters the accumulator
     83  0000 ????
     84  0000 ????						; OUT: A = 0
     85  0000 ????
     86  0000 ????				      MAC	vertical_sync
     87  0000 ????				      lda	#%1110	; each '1' bits generate a VSYNC ON line (bits 1..3)
     88  0000 ????			   .VSLP1     sta	WSYNC	; 1st '0' bit resets Vsync, 2nd '0' bit exit loop
     89  0000 ????				      sta	VSYNC
     90  0000 ????				      lsr
     91  0000 ????				      bne	.VSLP1	; branch until VYSNC has been reset
     92  0000 ????				      ENDM
     93  0000 ????
     94  0000 ????						;-------------------------------------------------------------------------------
     95  0000 ????						; CLEAN_START
     96  0000 ????						; Original author: Andrew Davie
     97  0000 ????						; Standardised start-up code, clears stack, all TIA registers and RAM to 0
     98  0000 ????						; Sets stack pointer to $FF, and all registers to 0
     99  0000 ????						; Sets decimal mode off, sets interrupt flag (kind of un-necessary)
    100  0000 ????						; Use as very first section of code on boot (ie: at reset)
    101  0000 ????						; Code written to minimise total ROM usage - uses weird 6502 knowledge :)
    102  0000 ????
    103  0000 ????				      MAC	clean_start
    104  0000 ????				      sei
    105  0000 ????				      cld
    106  0000 ????
    107  0000 ????				      ldx	#0
    108  0000 ????				      txa
    109  0000 ????				      tay
    110  0000 ????			   .CLEAR_STACK dex
    111  0000 ????				      txs
    112  0000 ????				      pha
    113  0000 ????				      bne	.CLEAR_STACK	; SP=$FF, X = A = Y = 0
    114  0000 ????
    115  0000 ????				      ENDM
    116  0000 ????
    117  0000 ????						;-------------------------------------------------------
    118  0000 ????						; SET_POINTER
    119  0000 ????						; Original author: Manuel Rotschkar
    120  0000 ????						;
    121  0000 ????						; Sets a 2 byte RAM pointer to an absolute address.
    122  0000 ????						;
    123  0000 ????						; Usage: SET_POINTER pointer, address
    124  0000 ????						; Example: SET_POINTER SpritePTR, SpriteData
    125  0000 ????						;
    126  0000 ????						; Note: Alters the accumulator, NZ flags
    127  0000 ????						; IN 1: 2 byte RAM location reserved for pointer
    128  0000 ????						; IN 2: absolute address
    129  0000 ????
    130  0000 ????				      MAC	set_pointer
    131  0000 ????			   .POINTER   SET	{1}
    132  0000 ????			   .ADDRESS   SET	{2}
    133  0000 ????
    134  0000 ????				      LDA	#<.ADDRESS	; Get Lowbyte of Address
    135  0000 ????				      STA	.POINTER	; Store in pointer
    136  0000 ????				      LDA	#>.ADDRESS	; Get Hibyte of Address
    137  0000 ????				      STA	.POINTER+1	; Store in pointer+1
    138  0000 ????
    139  0000 ????				      ENDM
    140  0000 ????
    141  0000 ????						;-------------------------------------------------------
    142  0000 ????						; BOUNDARY byte#
    143  0000 ????						; Original author: Denis Debro (borrowed from Bob Smith / Thomas)
    144  0000 ????						;
    145  0000 ????						; Push data to a certain position inside a page and keep count of how
    146  0000 ????						; many free bytes the programmer will have.
    147  0000 ????						;
    148  0000 ????						; eg: BOUNDARY 5    ; position at byte #5 in page
    149  0000 ????
    150  0000 ????			   .FREE_BYTES SET	0
    151  0000 ????				      MAC	boundary
    152  0000 ????				      REPEAT	256
    153  0000 ????				      IF	<. % {1} = 0
    154  0000 ????				      MEXIT
    155  0000 ????				      ELSE
    156  0000 ????			   .FREE_BYTES SET	.FREE_BYTES + 1
    157  0000 ????				      .byte	$00
    158  0000 ????				      ENDIF
    159  0000 ????				      REPEND
    160  0000 ????				      ENDM
    161  0000 ????
    162  0000 ????						;-------------------------------------------------------
    163  0000 ????						; SKIP_SCANLINES #lines
    164  0000 ????						;
    165  0000 ????						; Skip a given # of scanlines.
    166  0000 ????						; Sets the X register to zero.
    167  0000 ????
    168  0000 ????				      MAC	skip_scanlines
    169  0000 ????			   .LINES     SET	{1}
    170  0000 ????				      ldx	#.LINES
    171  0000 ????			   .vblank    sta	WSYNC
    172  0000 ????				      dex
    173  0000 ????				      bne	.vblank
    174  0000 ????				      ENDM
    175  0000 ????
    176  0000 ????						; EOF
------- FILE doorroom.asm
------- FILE doorroomcode.asm LEVEL 2 PASS 2
      0  0000 ????				      include	"doorroomcode.asm"
      1  0000 ????
      2  0000 ????				      MAC	door_room
      3  0000 ????						; Skip 5 scanlines with no PF set
      4  0000 ????				      ldx	#0
      5  0000 ????				      stx	PF0
      6  0000 ????				      stx	PF1
      7  0000 ????				      stx	PF2
      8  0000 ????				      REPEAT	5
      9  0000 ????				      sta	WSYNC
     10  0000 ????				      REPEND
     11  0000 ????
     12  0000 ????
     13  0000 ????						; Set the PF0 to...
     14  0000 ????				      ldx	#%00010000
     15  0000 ????				      stx	PF0
     16  0000 ????				      ldx	#%00000000
     17  0000 ????				      stx	PF1
     18  0000 ????				      stx	PF2
     19  0000 ????				      REPEAT	7
     20  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
     21  0000 ????				      REPEND
     22  0000 ????
     23  0000 ????
     24  0000 ????				      ldx	#%00100000
     25  0000 ????				      stx	PF0
     26  0000 ????				      ldx	#%00000000
     27  0000 ????				      stx	PF1
     28  0000 ????				      stx	PF2
     29  0000 ????				      REPEAT	7
     30  0000 ????				      sta	WSYNC
     31  0000 ????				      REPEND
     32  0000 ????
     33  0000 ????
     34  0000 ????				      ldx	#%01000000
     35  0000 ????				      stx	PF0
     36  0000 ????				      ldx	#%00000000
     37  0000 ????				      stx	PF1
     38  0000 ????				      stx	PF2
     39  0000 ????				      REPEAT	7
     40  0000 ????				      sta	WSYNC
     41  0000 ????				      REPEND
     42  0000 ????
     43  0000 ????				      ldx	#%10000000
     44  0000 ????				      stx	PF0
     45  0000 ????				      ldx	#%00000000
     46  0000 ????				      stx	PF1
     47  0000 ????				      stx	PF2
     48  0000 ????				      REPEAT	7
     49  0000 ????				      sta	WSYNC
     50  0000 ????				      REPEND
     51  0000 ????
     52  0000 ????				      ldx	#%00000000
     53  0000 ????				      stx	PF0
     54  0000 ????				      ldx	#%10000000
     55  0000 ????				      stx	PF1
     56  0000 ????				      ldx	#%00000000
     57  0000 ????				      stx	PF2
     58  0000 ????				      REPEAT	7
     59  0000 ????				      sta	WSYNC
     60  0000 ????				      REPEND
     61  0000 ????
     62  0000 ????				      ldx	#%00000000
     63  0000 ????				      stx	PF0
     64  0000 ????				      ldx	#%01000000
     65  0000 ????				      stx	PF1
     66  0000 ????				      ldx	#%00000000
     67  0000 ????				      stx	PF2
     68  0000 ????				      REPEAT	7
     69  0000 ????				      sta	WSYNC
     70  0000 ????				      REPEND
     71  0000 ????
     72  0000 ????				      ldx	#%00000000
     73  0000 ????				      stx	PF0
     74  0000 ????				      ldx	#%00100000
     75  0000 ????				      stx	PF1
     76  0000 ????				      ldx	#%00000000
     77  0000 ????				      stx	PF2
     78  0000 ????				      REPEAT	7
     79  0000 ????				      sta	WSYNC	;
     80  0000 ????				      REPEND
     81  0000 ????
     82  0000 ????						; Set the next 164 lines only with PF0 third bit enabled
     83  0000 ????				      ldx	#%00000000
     84  0000 ????				      stx	PF0
     85  0000 ????				      ldx	#%00011111
     86  0000 ????				      stx	PF1
     87  0000 ????				      ldx	#%11111111
     88  0000 ????				      stx	PF2
     89  0000 ????				      REPEAT	7
     90  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
     91  0000 ????				      REPEND
     92  0000 ????
     93  0000 ????
     94  0000 ????				      ldx	#%00000000
     95  0000 ????				      stx	PF0
     96  0000 ????				      ldx	#%00010000
     97  0000 ????				      stx	PF1
     98  0000 ????				      ldx	#%00000000
     99  0000 ????				      stx	PF2
    100  0000 ????				      REPEAT	21
    101  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
    102  0000 ????				      REPEND
    103  0000 ????
    104  0000 ????						;82
    105  0000 ????
    106  0000 ????				      ldx	#%00000000
    107  0000 ????				      stx	PF0
    108  0000 ????				      ldx	#%00010000
    109  0000 ????				      stx	PF1
    110  0000 ????				      ldx	#%11110000
    111  0000 ????				      stx	PF2
    112  0000 ????				      REPEAT	7
    113  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
    114  0000 ????				      REPEND
    115  0000 ????
    116  0000 ????
    117  0000 ????				      ldx	#%00000000
    118  0000 ????				      stx	PF0
    119  0000 ????				      ldx	#%00010000
    120  0000 ????				      stx	PF1
    121  0000 ????				      ldx	#%00010000
    122  0000 ????				      stx	PF2
    123  0000 ????				      REPEAT	35
    124  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
    125  0000 ????				      REPEND
    126  0000 ????
    127  0000 ????				      ldx	#%00000000
    128  0000 ????				      stx	PF0
    129  0000 ????				      ldx	#%00010000
    130  0000 ????				      stx	PF1
    131  0000 ????				      ldx	#%00010000
    132  0000 ????				      stx	PF2
    133  0000 ????				      REPEAT	7
    134  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
    135  0000 ????				      REPEND
    136  0000 ????
    137  0000 ????						;152
    138  0000 ????
    139  0000 ????						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
    140  0000 ????				      ldx	#%00000000
    141  0000 ????				      stx	PF0
    142  0000 ????				      ldx	#%00011111
    143  0000 ????				      stx	PF1
    144  0000 ????				      ldx	#%11111111
    145  0000 ????				      stx	PF2
    146  0000 ????				      REPEAT	7
    147  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
    148  0000 ????				      REPEND
    149  0000 ????
    150  0000 ????						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	
    151  0000 ????				      ldx	#%00000000
    152  0000 ????				      stx	PF0
    153  0000 ????				      ldx	#%00100000
    154  0000 ????				      stx	PF1
    155  0000 ????				      ldx	#%00000000
    156  0000 ????				      stx	PF2
    157  0000 ????				      REPEAT	7
    158  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
    159  0000 ????				      REPEND
    160  0000 ????
    161  0000 ????
    162  0000 ????				      ldx	#%01000000
    163  0000 ????				      stx	PF1
    164  0000 ????				      ldx	#%00000000
    165  0000 ????				      stx	PF2
    166  0000 ????				      REPEAT	7
    167  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
    168  0000 ????				      REPEND
    169  0000 ????
    170  0000 ????
    171  0000 ????				      ldx	#%10000000
    172  0000 ????				      stx	PF1
    173  0000 ????				      ldx	#%00000000
    174  0000 ????				      stx	PF2
    175  0000 ????				      REPEAT	7
    176  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
    177  0000 ????				      REPEND
    178  0000 ????
    179  0000 ????				      ldx	#%10000000
    180  0000 ????				      stx	PF0
    181  0000 ????				      ldx	#%00000000
    182  0000 ????				      stx	PF1
    183  0000 ????				      stx	PF2
    184  0000 ????				      REPEAT	7
    185  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
    186  0000 ????				      REPEND
    187  0000 ????
    188  0000 ????				      ldx	#%01000000
    189  0000 ????				      stx	PF0
    190  0000 ????				      ldx	#%00000000
    191  0000 ????				      stx	PF1
    192  0000 ????				      stx	PF2
    193  0000 ????				      REPEAT	7
    194  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
    195  0000 ????				      REPEND
    196  0000 ????
    197  0000 ????				      ldx	#%00100000
    198  0000 ????				      stx	PF0
    199  0000 ????				      ldx	#%00000000
    200  0000 ????				      stx	PF1
    201  0000 ????				      stx	PF2
    202  0000 ????				      REPEAT	7
    203  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
    204  0000 ????				      REPEND
    205  0000 ????
    206  0000 ????				      ldx	#%00010000
    207  0000 ????				      stx	PF0
    208  0000 ????				      ldx	#%00000000
    209  0000 ????				      stx	PF1
    210  0000 ????				      stx	PF2
    211  0000 ????				      REPEAT	7
    212  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
    213  0000 ????				      REPEND
    214  0000 ????
    215  0000 ????						;187
    216  0000 ????
    217  0000 ????						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    218  0000 ????						;; Output 30 more VBLANK overscan lines to complete our frame
    219  0000 ????						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    220  0000 ????				      lda	#2
    221  0000 ????				      sta	VBLANK	; enable VBLANK back again
    222  0000 ????				      REPEAT	30
    223  0000 ????				      sta	WSYNC	; output the 30 recommended overscan lines
    224  0000 ????				      REPEND
    225  0000 ????
    226  0000 ????				      ENDM
------- FILE doorroom.asm
------- FILE emptyroomcode.asm LEVEL 2 PASS 2
      0  0000 ????				      include	"emptyroomcode.asm"
      1  0000 ????				      MAC	empty_room
      2  0000 ????
      3  0000 ????						; Skip 3 scanlines with no PF set
      4  0000 ????				      ldx	#0
      5  0000 ????				      stx	PF0
      6  0000 ????				      stx	PF1
      7  0000 ????				      stx	PF2
      8  0000 ????				      REPEAT	3
      9  0000 ????				      sta	WSYNC
     10  0000 ????				      REPEND
     11  0000 ????
     12  0000 ????						; Set the PF0 to 1110 (LSB first) and PF1-PF2 as 1111 1111
     13  0000 ????				      ldx	#%00010000
     14  0000 ????				      stx	PF0
     15  0000 ????				      ldx	#%00000000
     16  0000 ????				      stx	PF1
     17  0000 ????				      stx	PF2
     18  0000 ????				      REPEAT	7
     19  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
     20  0000 ????				      REPEND
     21  0000 ????
     22  0000 ????
     23  0000 ????				      ldx	#%00100000
     24  0000 ????				      stx	PF0
     25  0000 ????				      ldx	#%00000000
     26  0000 ????				      stx	PF1
     27  0000 ????				      stx	PF2
     28  0000 ????				      REPEAT	7
     29  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
     30  0000 ????				      REPEND
     31  0000 ????
     32  0000 ????						; Set the PF0 to 1110 (LSB first) and PF1-PF2 as 1111 1111
     33  0000 ????				      ldx	#%01000000
     34  0000 ????				      stx	PF0
     35  0000 ????				      ldx	#%00000000
     36  0000 ????				      stx	PF1
     37  0000 ????				      stx	PF2
     38  0000 ????				      REPEAT	7
     39  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
     40  0000 ????				      REPEND
     41  0000 ????
     42  0000 ????				      ldx	#%10000000
     43  0000 ????				      stx	PF0
     44  0000 ????				      ldx	#%00000000
     45  0000 ????				      stx	PF1
     46  0000 ????				      stx	PF2
     47  0000 ????				      REPEAT	7
     48  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
     49  0000 ????				      REPEND
     50  0000 ????
     51  0000 ????				      ldx	#%00000000
     52  0000 ????				      stx	PF0
     53  0000 ????				      ldx	#%10000000
     54  0000 ????				      stx	PF1
     55  0000 ????				      ldx	#%00000000
     56  0000 ????				      stx	PF2
     57  0000 ????				      REPEAT	7
     58  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
     59  0000 ????				      REPEND
     60  0000 ????
     61  0000 ????				      ldx	#%00000000
     62  0000 ????				      stx	PF0
     63  0000 ????				      ldx	#%01000000
     64  0000 ????				      stx	PF1
     65  0000 ????				      ldx	#%00000000
     66  0000 ????				      stx	PF2
     67  0000 ????				      REPEAT	7
     68  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
     69  0000 ????				      REPEND
     70  0000 ????
     71  0000 ????				      ldx	#%00000000
     72  0000 ????				      stx	PF0
     73  0000 ????				      ldx	#%00100000
     74  0000 ????				      stx	PF1
     75  0000 ????				      ldx	#%00000000
     76  0000 ????				      stx	PF2
     77  0000 ????				      REPEAT	7
     78  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
     79  0000 ????				      REPEND
     80  0000 ????
     81  0000 ????						; Set the next 164 lines only with PF0 third bit enabled
     82  0000 ????				      ldx	#%00000000
     83  0000 ????				      stx	PF0
     84  0000 ????				      ldx	#%00011111
     85  0000 ????				      stx	PF1
     86  0000 ????				      ldx	#%11111111
     87  0000 ????				      stx	PF2
     88  0000 ????				      REPEAT	7
     89  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
     90  0000 ????				      REPEND
     91  0000 ????						;56
     92  0000 ????				      ldx	#%00000000
     93  0000 ????				      stx	PF0
     94  0000 ????				      ldx	#%00010000
     95  0000 ????				      stx	PF1
     96  0000 ????				      ldx	#%00000000
     97  0000 ????				      stx	PF2
     98  0000 ????				      REPEAT	77
     99  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
    100  0000 ????				      REPEND
    101  0000 ????						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
    102  0000 ????				      ldx	#%00000000
    103  0000 ????				      stx	PF0
    104  0000 ????				      ldx	#%00011111
    105  0000 ????				      stx	PF1
    106  0000 ????				      ldx	#%11111111
    107  0000 ????				      stx	PF2
    108  0000 ????				      REPEAT	7
    109  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
    110  0000 ????				      REPEND
    111  0000 ????
    112  0000 ????						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	
    113  0000 ????				      ldx	#%00000000
    114  0000 ????				      stx	PF0
    115  0000 ????				      ldx	#%00100000
    116  0000 ????				      stx	PF1
    117  0000 ????				      ldx	#%00000000
    118  0000 ????				      stx	PF2
    119  0000 ????				      REPEAT	7
    120  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
    121  0000 ????				      REPEND
    122  0000 ????
    123  0000 ????
    124  0000 ????				      ldx	#%01000000
    125  0000 ????				      stx	PF1
    126  0000 ????				      ldx	#%00000000
    127  0000 ????				      stx	PF2
    128  0000 ????				      REPEAT	7
    129  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
    130  0000 ????				      REPEND
    131  0000 ????
    132  0000 ????
    133  0000 ????				      ldx	#%10000000
    134  0000 ????				      stx	PF1
    135  0000 ????				      ldx	#%00000000
    136  0000 ????				      stx	PF2
    137  0000 ????				      REPEAT	7
    138  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
    139  0000 ????				      REPEND
    140  0000 ????
    141  0000 ????				      ldx	#%10000000
    142  0000 ????				      stx	PF0
    143  0000 ????				      ldx	#%00000000
    144  0000 ????				      stx	PF1
    145  0000 ????				      stx	PF2
    146  0000 ????				      REPEAT	7
    147  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
    148  0000 ????				      REPEND
    149  0000 ????
    150  0000 ????				      ldx	#%01000000
    151  0000 ????				      stx	PF0
    152  0000 ????				      ldx	#%00000000
    153  0000 ????				      stx	PF1
    154  0000 ????				      stx	PF2
    155  0000 ????				      REPEAT	7
    156  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
    157  0000 ????				      REPEND
    158  0000 ????
    159  0000 ????				      ldx	#%00100000
    160  0000 ????				      stx	PF0
    161  0000 ????				      ldx	#%00000000
    162  0000 ????				      stx	PF1
    163  0000 ????				      stx	PF2
    164  0000 ????				      REPEAT	7
    165  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
    166  0000 ????				      REPEND
    167  0000 ????
    168  0000 ????				      ldx	#%00010000
    169  0000 ????				      stx	PF0
    170  0000 ????				      ldx	#%00000000
    171  0000 ????				      stx	PF1
    172  0000 ????				      stx	PF2
    173  0000 ????				      REPEAT	7
    174  0000 ????				      sta	WSYNC	; repeat PF config for 7 scanlines
    175  0000 ????				      REPEND
    176  0000 ????
    177  0000 ????
    178  0000 ????						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    179  0000 ????						;; Output 30 more VBLANK overscan lines to complete our frame
    180  0000 ????						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    181  0000 ????				      lda	#2
    182  0000 ????				      sta	VBLANK	; enable VBLANK back again
    183  0000 ????				      REPEAT	30
    184  0000 ????				      sta	WSYNC	; output the 30 recommended overscan lines
    185  0000 ????				      REPEND
    186  0000 ????
    187  0000 ????				      ENDM
------- FILE doorroom.asm
------- FILE potest.asm LEVEL 2 PASS 2
      0  0000 ????				      include	"potest.asm"
      1  0000 ????						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      2  0000 ????						;; Lookup table for the player graphics bitmap
      3  0000 ????						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      4  0000 ????				      MAC	p0bitmap
      5  0000 ????				      byte	#%00000000
      6  0000 ????				      byte	#%00101000
      7  0000 ????				      byte	#%01110100
      8  0000 ????				      byte	#%11111010
      9  0000 ????				      byte	#%11111010
     10  0000 ????				      byte	#%11111010
     11  0000 ????				      byte	#%11111110
     12  0000 ????				      byte	#%01101100
     13  0000 ????				      byte	#%00110000
     14  0000 ????				      ENDM
     15  0000 ????
     16  0000 ????						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     17  0000 ????						;; Lookup table for the player colors
     18  0000 ????						;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     19  0000 ????				      MAC	p0color
     20  0000 ????				      byte	#$00
     21  0000 ????				      byte	#$40
     22  0000 ????				      byte	#$40
     23  0000 ????				      byte	#$40
     24  0000 ????				      byte	#$40
     25  0000 ????				      byte	#$42
     26  0000 ????				      byte	#$42
     27  0000 ????				      byte	#$44
     28  0000 ????				      byte	#$D2
     29  0000 ????				      ENDM
------- FILE doorroom.asm
     11  0000 ????
     12 U0082 ????				      seg.u	Variables
     13 U0080					      org	$80
     14 U0080		       00	   P0Height   byte.b		; player sprite height
     15 U0081		       00	   PlayerYPos byte.b		; player sprite Y coordinate
     16 U0082							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     17 U0082							;; Start our ROM code
     18 U0082							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     19  10000 ????				       seg	Code
     20  f000					      org	$f000
     21  f000
     22  f000				   Reset
      0  f000					      CLEAN_START
      1  f000		       78		      sei
      2  f001		       d8		      cld
      3  f002
      4  f002		       a2 00		      ldx	#0
      5  f004		       8a		      txa
      6  f005		       a8		      tay
      7  f006		       ca	   .CLEAR_STACK dex
      8  f007		       9a		      txs
      9  f008		       48		      pha
     10  f009		       d0 fb		      bne	.CLEAR_STACK
     11  f00b
     24  f00b
     25  f00b		       a2 ce		      ldx	#$CE	; blue background color
     26  f00d		       86 09		      stx	COLUBK
     27  f00f
     28  f00f		       a9 04		      lda	#$4	; yellow playfield color
     29  f011		       85 08		      sta	COLUPF
     30  f013
     31  f013
     32  f013							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     33  f013							;; Initialize variables
     34  f013							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     35  f013		       a9 b4		      lda	#180
     36  f015		       85 81		      sta	PlayerYPos	; PlayerYPos = 180
     37  f017
     38  f017		       a9 09		      lda	#9
     39  f019		       85 80		      sta	P0Height	; P0Height = 9
     40  f01b							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     41  f01b							;; Start a new frame by configuring VBLANK and VSYNC
     42  f01b							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     43  f01b				   StartFrame
     44  f01b		       a9 02		      lda	#02
     45  f01d		       85 01		      sta	VBLANK	; turn VBLANK on
     46  f01f		       85 00		      sta	VSYNC	; turn VSYNC on
     47  f021
     48  f021							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     49  f021							;; Generate the three lines of VSYNC
     50  f021							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     51  f021					      REPEAT	3
     52  f021		       85 02		      sta	WSYNC	; three VSYNC scanlines
     51  f021					      REPEND
     52  f023		       85 02		      sta	WSYNC	; three VSYNC scanlines
     51  f023					      REPEND
     52  f025		       85 02		      sta	WSYNC	; three VSYNC scanlines
     53  f027					      REPEND
     54  f027
     55  f027		       a9 00		      lda	#0
     56  f029		       85 00		      sta	VSYNC	; turn VSYNC off
     57  f02b
     58  f02b							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     59  f02b							;; Let the TIA output the 37 recommended lines of VBLANK
     60  f02b							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     61  f02b					      REPEAT	37
     62  f02b		       85 02		      sta	WSYNC
     61  f02b					      REPEND
     62  f02d		       85 02		      sta	WSYNC
     61  f02d					      REPEND
     62  f02f		       85 02		      sta	WSYNC
     61  f02f					      REPEND
     62  f031		       85 02		      sta	WSYNC
     61  f031					      REPEND
     62  f033		       85 02		      sta	WSYNC
     61  f033					      REPEND
     62  f035		       85 02		      sta	WSYNC
     61  f035					      REPEND
     62  f037		       85 02		      sta	WSYNC
     61  f037					      REPEND
     62  f039		       85 02		      sta	WSYNC
     61  f039					      REPEND
     62  f03b		       85 02		      sta	WSYNC
     61  f03b					      REPEND
     62  f03d		       85 02		      sta	WSYNC
     61  f03d					      REPEND
     62  f03f		       85 02		      sta	WSYNC
     61  f03f					      REPEND
     62  f041		       85 02		      sta	WSYNC
     61  f041					      REPEND
     62  f043		       85 02		      sta	WSYNC
     61  f043					      REPEND
     62  f045		       85 02		      sta	WSYNC
     61  f045					      REPEND
     62  f047		       85 02		      sta	WSYNC
     61  f047					      REPEND
     62  f049		       85 02		      sta	WSYNC
     61  f049					      REPEND
     62  f04b		       85 02		      sta	WSYNC
     61  f04b					      REPEND
     62  f04d		       85 02		      sta	WSYNC
     61  f04d					      REPEND
     62  f04f		       85 02		      sta	WSYNC
     61  f04f					      REPEND
     62  f051		       85 02		      sta	WSYNC
     61  f051					      REPEND
     62  f053		       85 02		      sta	WSYNC
     61  f053					      REPEND
     62  f055		       85 02		      sta	WSYNC
     61  f055					      REPEND
     62  f057		       85 02		      sta	WSYNC
     61  f057					      REPEND
     62  f059		       85 02		      sta	WSYNC
     61  f059					      REPEND
     62  f05b		       85 02		      sta	WSYNC
     61  f05b					      REPEND
     62  f05d		       85 02		      sta	WSYNC
     61  f05d					      REPEND
     62  f05f		       85 02		      sta	WSYNC
     61  f05f					      REPEND
     62  f061		       85 02		      sta	WSYNC
     61  f061					      REPEND
     62  f063		       85 02		      sta	WSYNC
     61  f063					      REPEND
     62  f065		       85 02		      sta	WSYNC
     61  f065					      REPEND
     62  f067		       85 02		      sta	WSYNC
     61  f067					      REPEND
     62  f069		       85 02		      sta	WSYNC
     61  f069					      REPEND
     62  f06b		       85 02		      sta	WSYNC
     61  f06b					      REPEND
     62  f06d		       85 02		      sta	WSYNC
     61  f06d					      REPEND
     62  f06f		       85 02		      sta	WSYNC
     61  f06f					      REPEND
     62  f071		       85 02		      sta	WSYNC
     61  f071					      REPEND
     62  f073		       85 02		      sta	WSYNC
     63  f075					      REPEND
     64  f075
     65  f075		       a9 00		      lda	#0
     66  f077		       85 01		      sta	VBLANK	; turn VBLANK off
     67  f079
     68  f079							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     69  f079							;; Set the CTRLPF register to allow playfield reflect
     70  f079							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     71  f079		       a2 01		      ldx	#%00000001	; CTRLPF register (D0 is the reflect flag)
     72  f07b		       86 0a		      stx	CTRLPF
     73  f07d
     74  f07d							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     75  f07d							;; Draw the 192 visible scanlines
     76  f07d							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      0  f07d					      DOOR_ROOM
      1  f07d
      2  f07d		       a2 00		      ldx	#0
      3  f07f		       86 0d		      stx	PF0
      4  f081		       86 0e		      stx	PF1
      5  f083		       86 0f		      stx	PF2
      6  f085					      REPEAT	5
      7  f085		       85 02		      sta	WSYNC
      6  f085					      REPEND
      7  f087		       85 02		      sta	WSYNC
      6  f087					      REPEND
      7  f089		       85 02		      sta	WSYNC
      6  f089					      REPEND
      7  f08b		       85 02		      sta	WSYNC
      6  f08b					      REPEND
      7  f08d		       85 02		      sta	WSYNC
      8  f08f					      REPEND
      9  f08f
     10  f08f
     11  f08f
     12  f08f		       a2 10		      ldx	#%00010000
     13  f091		       86 0d		      stx	PF0
     14  f093		       a2 00		      ldx	#%00000000
     15  f095		       86 0e		      stx	PF1
     16  f097		       86 0f		      stx	PF2
     17  f099					      REPEAT	7
     18  f099		       85 02		      sta	WSYNC
     17  f099					      REPEND
     18  f09b		       85 02		      sta	WSYNC
     17  f09b					      REPEND
     18  f09d		       85 02		      sta	WSYNC
     17  f09d					      REPEND
     18  f09f		       85 02		      sta	WSYNC
     17  f09f					      REPEND
     18  f0a1		       85 02		      sta	WSYNC
     17  f0a1					      REPEND
     18  f0a3		       85 02		      sta	WSYNC
     17  f0a3					      REPEND
     18  f0a5		       85 02		      sta	WSYNC
     19  f0a7					      REPEND
     20  f0a7
     21  f0a7
     22  f0a7		       a2 20		      ldx	#%00100000
     23  f0a9		       86 0d		      stx	PF0
     24  f0ab		       a2 00		      ldx	#%00000000
     25  f0ad		       86 0e		      stx	PF1
     26  f0af		       86 0f		      stx	PF2
     27  f0b1					      REPEAT	7
     28  f0b1		       85 02		      sta	WSYNC
     27  f0b1					      REPEND
     28  f0b3		       85 02		      sta	WSYNC
     27  f0b3					      REPEND
     28  f0b5		       85 02		      sta	WSYNC
     27  f0b5					      REPEND
     28  f0b7		       85 02		      sta	WSYNC
     27  f0b7					      REPEND
     28  f0b9		       85 02		      sta	WSYNC
     27  f0b9					      REPEND
     28  f0bb		       85 02		      sta	WSYNC
     27  f0bb					      REPEND
     28  f0bd		       85 02		      sta	WSYNC
     29  f0bf					      REPEND
     30  f0bf
     31  f0bf
     32  f0bf		       a2 40		      ldx	#%01000000
     33  f0c1		       86 0d		      stx	PF0
     34  f0c3		       a2 00		      ldx	#%00000000
     35  f0c5		       86 0e		      stx	PF1
     36  f0c7		       86 0f		      stx	PF2
     37  f0c9					      REPEAT	7
     38  f0c9		       85 02		      sta	WSYNC
     37  f0c9					      REPEND
     38  f0cb		       85 02		      sta	WSYNC
     37  f0cb					      REPEND
     38  f0cd		       85 02		      sta	WSYNC
     37  f0cd					      REPEND
     38  f0cf		       85 02		      sta	WSYNC
     37  f0cf					      REPEND
     38  f0d1		       85 02		      sta	WSYNC
     37  f0d1					      REPEND
     38  f0d3		       85 02		      sta	WSYNC
     37  f0d3					      REPEND
     38  f0d5		       85 02		      sta	WSYNC
     39  f0d7					      REPEND
     40  f0d7
     41  f0d7		       a2 80		      ldx	#%10000000
     42  f0d9		       86 0d		      stx	PF0
     43  f0db		       a2 00		      ldx	#%00000000
     44  f0dd		       86 0e		      stx	PF1
     45  f0df		       86 0f		      stx	PF2
     46  f0e1					      REPEAT	7
     47  f0e1		       85 02		      sta	WSYNC
     46  f0e1					      REPEND
     47  f0e3		       85 02		      sta	WSYNC
     46  f0e3					      REPEND
     47  f0e5		       85 02		      sta	WSYNC
     46  f0e5					      REPEND
     47  f0e7		       85 02		      sta	WSYNC
     46  f0e7					      REPEND
     47  f0e9		       85 02		      sta	WSYNC
     46  f0e9					      REPEND
     47  f0eb		       85 02		      sta	WSYNC
     46  f0eb					      REPEND
     47  f0ed		       85 02		      sta	WSYNC
     48  f0ef					      REPEND
     49  f0ef
     50  f0ef		       a2 00		      ldx	#%00000000
     51  f0f1		       86 0d		      stx	PF0
     52  f0f3		       a2 80		      ldx	#%10000000
     53  f0f5		       86 0e		      stx	PF1
     54  f0f7		       a2 00		      ldx	#%00000000
     55  f0f9		       86 0f		      stx	PF2
     56  f0fb					      REPEAT	7
     57  f0fb		       85 02		      sta	WSYNC
     56  f0fb					      REPEND
     57  f0fd		       85 02		      sta	WSYNC
     56  f0fd					      REPEND
     57  f0ff		       85 02		      sta	WSYNC
     56  f0ff					      REPEND
     57  f101		       85 02		      sta	WSYNC
     56  f101					      REPEND
     57  f103		       85 02		      sta	WSYNC
     56  f103					      REPEND
     57  f105		       85 02		      sta	WSYNC
     56  f105					      REPEND
     57  f107		       85 02		      sta	WSYNC
     58  f109					      REPEND
     59  f109
     60  f109		       a2 00		      ldx	#%00000000
     61  f10b		       86 0d		      stx	PF0
     62  f10d		       a2 40		      ldx	#%01000000
     63  f10f		       86 0e		      stx	PF1
     64  f111		       a2 00		      ldx	#%00000000
     65  f113		       86 0f		      stx	PF2
     66  f115					      REPEAT	7
     67  f115		       85 02		      sta	WSYNC
     66  f115					      REPEND
     67  f117		       85 02		      sta	WSYNC
     66  f117					      REPEND
     67  f119		       85 02		      sta	WSYNC
     66  f119					      REPEND
     67  f11b		       85 02		      sta	WSYNC
     66  f11b					      REPEND
     67  f11d		       85 02		      sta	WSYNC
     66  f11d					      REPEND
     67  f11f		       85 02		      sta	WSYNC
     66  f11f					      REPEND
     67  f121		       85 02		      sta	WSYNC
     68  f123					      REPEND
     69  f123
     70  f123		       a2 00		      ldx	#%00000000
     71  f125		       86 0d		      stx	PF0
     72  f127		       a2 20		      ldx	#%00100000
     73  f129		       86 0e		      stx	PF1
     74  f12b		       a2 00		      ldx	#%00000000
     75  f12d		       86 0f		      stx	PF2
     76  f12f					      REPEAT	7
     77  f12f		       85 02		      sta	WSYNC
     76  f12f					      REPEND
     77  f131		       85 02		      sta	WSYNC
     76  f131					      REPEND
     77  f133		       85 02		      sta	WSYNC
     76  f133					      REPEND
     77  f135		       85 02		      sta	WSYNC
     76  f135					      REPEND
     77  f137		       85 02		      sta	WSYNC
     76  f137					      REPEND
     77  f139		       85 02		      sta	WSYNC
     76  f139					      REPEND
     77  f13b		       85 02		      sta	WSYNC
     78  f13d					      REPEND
     79  f13d
     80  f13d
     81  f13d		       a2 00		      ldx	#%00000000
     82  f13f		       86 0d		      stx	PF0
     83  f141		       a2 1f		      ldx	#%00011111
     84  f143		       86 0e		      stx	PF1
     85  f145		       a2 ff		      ldx	#%11111111
     86  f147		       86 0f		      stx	PF2
     87  f149					      REPEAT	7
     88  f149		       85 02		      sta	WSYNC
     87  f149					      REPEND
     88  f14b		       85 02		      sta	WSYNC
     87  f14b					      REPEND
     88  f14d		       85 02		      sta	WSYNC
     87  f14d					      REPEND
     88  f14f		       85 02		      sta	WSYNC
     87  f14f					      REPEND
     88  f151		       85 02		      sta	WSYNC
     87  f151					      REPEND
     88  f153		       85 02		      sta	WSYNC
     87  f153					      REPEND
     88  f155		       85 02		      sta	WSYNC
     89  f157					      REPEND
     90  f157
     91  f157
     92  f157		       a2 00		      ldx	#%00000000
     93  f159		       86 0d		      stx	PF0
     94  f15b		       a2 10		      ldx	#%00010000
     95  f15d		       86 0e		      stx	PF1
     96  f15f		       a2 00		      ldx	#%00000000
     97  f161		       86 0f		      stx	PF2
     98  f163					      REPEAT	21
     99  f163		       85 02		      sta	WSYNC
     98  f163					      REPEND
     99  f165		       85 02		      sta	WSYNC
     98  f165					      REPEND
     99  f167		       85 02		      sta	WSYNC
     98  f167					      REPEND
     99  f169		       85 02		      sta	WSYNC
     98  f169					      REPEND
     99  f16b		       85 02		      sta	WSYNC
     98  f16b					      REPEND
     99  f16d		       85 02		      sta	WSYNC
     98  f16d					      REPEND
     99  f16f		       85 02		      sta	WSYNC
     98  f16f					      REPEND
     99  f171		       85 02		      sta	WSYNC
     98  f171					      REPEND
     99  f173		       85 02		      sta	WSYNC
     98  f173					      REPEND
     99  f175		       85 02		      sta	WSYNC
     98  f175					      REPEND
     99  f177		       85 02		      sta	WSYNC
     98  f177					      REPEND
     99  f179		       85 02		      sta	WSYNC
     98  f179					      REPEND
     99  f17b		       85 02		      sta	WSYNC
     98  f17b					      REPEND
     99  f17d		       85 02		      sta	WSYNC
     98  f17d					      REPEND
     99  f17f		       85 02		      sta	WSYNC
     98  f17f					      REPEND
     99  f181		       85 02		      sta	WSYNC
     98  f181					      REPEND
     99  f183		       85 02		      sta	WSYNC
     98  f183					      REPEND
     99  f185		       85 02		      sta	WSYNC
     98  f185					      REPEND
     99  f187		       85 02		      sta	WSYNC
     98  f187					      REPEND
     99  f189		       85 02		      sta	WSYNC
     98  f189					      REPEND
     99  f18b		       85 02		      sta	WSYNC
    100  f18d					      REPEND
    101  f18d
    102  f18d
    103  f18d
    104  f18d		       a2 00		      ldx	#%00000000
    105  f18f		       86 0d		      stx	PF0
    106  f191		       a2 10		      ldx	#%00010000
    107  f193		       86 0e		      stx	PF1
    108  f195		       a2 f0		      ldx	#%11110000
    109  f197		       86 0f		      stx	PF2
    110  f199					      REPEAT	7
    111  f199		       85 02		      sta	WSYNC
    110  f199					      REPEND
    111  f19b		       85 02		      sta	WSYNC
    110  f19b					      REPEND
    111  f19d		       85 02		      sta	WSYNC
    110  f19d					      REPEND
    111  f19f		       85 02		      sta	WSYNC
    110  f19f					      REPEND
    111  f1a1		       85 02		      sta	WSYNC
    110  f1a1					      REPEND
    111  f1a3		       85 02		      sta	WSYNC
    110  f1a3					      REPEND
    111  f1a5		       85 02		      sta	WSYNC
    112  f1a7					      REPEND
    113  f1a7
    114  f1a7
    115  f1a7		       a2 00		      ldx	#%00000000
    116  f1a9		       86 0d		      stx	PF0
    117  f1ab		       a2 10		      ldx	#%00010000
    118  f1ad		       86 0e		      stx	PF1
    119  f1af		       a2 10		      ldx	#%00010000
    120  f1b1		       86 0f		      stx	PF2
    121  f1b3					      REPEAT	35
    122  f1b3		       85 02		      sta	WSYNC
    121  f1b3					      REPEND
    122  f1b5		       85 02		      sta	WSYNC
    121  f1b5					      REPEND
    122  f1b7		       85 02		      sta	WSYNC
    121  f1b7					      REPEND
    122  f1b9		       85 02		      sta	WSYNC
    121  f1b9					      REPEND
    122  f1bb		       85 02		      sta	WSYNC
    121  f1bb					      REPEND
    122  f1bd		       85 02		      sta	WSYNC
    121  f1bd					      REPEND
    122  f1bf		       85 02		      sta	WSYNC
    121  f1bf					      REPEND
    122  f1c1		       85 02		      sta	WSYNC
    121  f1c1					      REPEND
    122  f1c3		       85 02		      sta	WSYNC
    121  f1c3					      REPEND
    122  f1c5		       85 02		      sta	WSYNC
    121  f1c5					      REPEND
    122  f1c7		       85 02		      sta	WSYNC
    121  f1c7					      REPEND
    122  f1c9		       85 02		      sta	WSYNC
    121  f1c9					      REPEND
    122  f1cb		       85 02		      sta	WSYNC
    121  f1cb					      REPEND
    122  f1cd		       85 02		      sta	WSYNC
    121  f1cd					      REPEND
    122  f1cf		       85 02		      sta	WSYNC
    121  f1cf					      REPEND
    122  f1d1		       85 02		      sta	WSYNC
    121  f1d1					      REPEND
    122  f1d3		       85 02		      sta	WSYNC
    121  f1d3					      REPEND
    122  f1d5		       85 02		      sta	WSYNC
    121  f1d5					      REPEND
    122  f1d7		       85 02		      sta	WSYNC
    121  f1d7					      REPEND
    122  f1d9		       85 02		      sta	WSYNC
    121  f1d9					      REPEND
    122  f1db		       85 02		      sta	WSYNC
    121  f1db					      REPEND
    122  f1dd		       85 02		      sta	WSYNC
    121  f1dd					      REPEND
    122  f1df		       85 02		      sta	WSYNC
    121  f1df					      REPEND
    122  f1e1		       85 02		      sta	WSYNC
    121  f1e1					      REPEND
    122  f1e3		       85 02		      sta	WSYNC
    121  f1e3					      REPEND
    122  f1e5		       85 02		      sta	WSYNC
    121  f1e5					      REPEND
    122  f1e7		       85 02		      sta	WSYNC
    121  f1e7					      REPEND
    122  f1e9		       85 02		      sta	WSYNC
    121  f1e9					      REPEND
    122  f1eb		       85 02		      sta	WSYNC
    121  f1eb					      REPEND
    122  f1ed		       85 02		      sta	WSYNC
    121  f1ed					      REPEND
    122  f1ef		       85 02		      sta	WSYNC
    121  f1ef					      REPEND
    122  f1f1		       85 02		      sta	WSYNC
    121  f1f1					      REPEND
    122  f1f3		       85 02		      sta	WSYNC
    121  f1f3					      REPEND
    122  f1f5		       85 02		      sta	WSYNC
    121  f1f5					      REPEND
    122  f1f7		       85 02		      sta	WSYNC
    123  f1f9					      REPEND
    124  f1f9
    125  f1f9		       a2 00		      ldx	#%00000000
    126  f1fb		       86 0d		      stx	PF0
    127  f1fd		       a2 10		      ldx	#%00010000
    128  f1ff		       86 0e		      stx	PF1
    129  f201		       a2 10		      ldx	#%00010000
    130  f203		       86 0f		      stx	PF2
    131  f205					      REPEAT	7
    132  f205		       85 02		      sta	WSYNC
    131  f205					      REPEND
    132  f207		       85 02		      sta	WSYNC
    131  f207					      REPEND
    132  f209		       85 02		      sta	WSYNC
    131  f209					      REPEND
    132  f20b		       85 02		      sta	WSYNC
    131  f20b					      REPEND
    132  f20d		       85 02		      sta	WSYNC
    131  f20d					      REPEND
    132  f20f		       85 02		      sta	WSYNC
    131  f20f					      REPEND
    132  f211		       85 02		      sta	WSYNC
    133  f213					      REPEND
    134  f213
    135  f213
    136  f213
    137  f213
    138  f213		       a2 00		      ldx	#%00000000
    139  f215		       86 0d		      stx	PF0
    140  f217		       a2 1f		      ldx	#%00011111
    141  f219		       86 0e		      stx	PF1
    142  f21b		       a2 ff		      ldx	#%11111111
    143  f21d		       86 0f		      stx	PF2
    144  f21f					      REPEAT	7
    145  f21f		       85 02		      sta	WSYNC
    144  f21f					      REPEND
    145  f221		       85 02		      sta	WSYNC
    144  f221					      REPEND
    145  f223		       85 02		      sta	WSYNC
    144  f223					      REPEND
    145  f225		       85 02		      sta	WSYNC
    144  f225					      REPEND
    145  f227		       85 02		      sta	WSYNC
    144  f227					      REPEND
    145  f229		       85 02		      sta	WSYNC
    144  f229					      REPEND
    145  f22b		       85 02		      sta	WSYNC
    146  f22d					      REPEND
    147  f22d
    148  f22d
    149  f22d		       a2 00		      ldx	#%00000000
    150  f22f		       86 0d		      stx	PF0
    151  f231		       a2 20		      ldx	#%00100000
    152  f233		       86 0e		      stx	PF1
    153  f235		       a2 00		      ldx	#%00000000
    154  f237		       86 0f		      stx	PF2
    155  f239					      REPEAT	7
    156  f239		       85 02		      sta	WSYNC
    155  f239					      REPEND
    156  f23b		       85 02		      sta	WSYNC
    155  f23b					      REPEND
    156  f23d		       85 02		      sta	WSYNC
    155  f23d					      REPEND
    156  f23f		       85 02		      sta	WSYNC
    155  f23f					      REPEND
    156  f241		       85 02		      sta	WSYNC
    155  f241					      REPEND
    156  f243		       85 02		      sta	WSYNC
    155  f243					      REPEND
    156  f245		       85 02		      sta	WSYNC
    157  f247					      REPEND
    158  f247
    159  f247
    160  f247		       a2 40		      ldx	#%01000000
    161  f249		       86 0e		      stx	PF1
    162  f24b		       a2 00		      ldx	#%00000000
    163  f24d		       86 0f		      stx	PF2
    164  f24f					      REPEAT	7
    165  f24f		       85 02		      sta	WSYNC
    164  f24f					      REPEND
    165  f251		       85 02		      sta	WSYNC
    164  f251					      REPEND
    165  f253		       85 02		      sta	WSYNC
    164  f253					      REPEND
    165  f255		       85 02		      sta	WSYNC
    164  f255					      REPEND
    165  f257		       85 02		      sta	WSYNC
    164  f257					      REPEND
    165  f259		       85 02		      sta	WSYNC
    164  f259					      REPEND
    165  f25b		       85 02		      sta	WSYNC
    166  f25d					      REPEND
    167  f25d
    168  f25d
    169  f25d		       a2 80		      ldx	#%10000000
    170  f25f		       86 0e		      stx	PF1
    171  f261		       a2 00		      ldx	#%00000000
    172  f263		       86 0f		      stx	PF2
    173  f265					      REPEAT	7
    174  f265		       85 02		      sta	WSYNC
    173  f265					      REPEND
    174  f267		       85 02		      sta	WSYNC
    173  f267					      REPEND
    174  f269		       85 02		      sta	WSYNC
    173  f269					      REPEND
    174  f26b		       85 02		      sta	WSYNC
    173  f26b					      REPEND
    174  f26d		       85 02		      sta	WSYNC
    173  f26d					      REPEND
    174  f26f		       85 02		      sta	WSYNC
    173  f26f					      REPEND
    174  f271		       85 02		      sta	WSYNC
    175  f273					      REPEND
    176  f273
    177  f273		       a2 80		      ldx	#%10000000
    178  f275		       86 0d		      stx	PF0
    179  f277		       a2 00		      ldx	#%00000000
    180  f279		       86 0e		      stx	PF1
    181  f27b		       86 0f		      stx	PF2
    182  f27d					      REPEAT	7
    183  f27d		       85 02		      sta	WSYNC
    182  f27d					      REPEND
    183  f27f		       85 02		      sta	WSYNC
    182  f27f					      REPEND
    183  f281		       85 02		      sta	WSYNC
    182  f281					      REPEND
    183  f283		       85 02		      sta	WSYNC
    182  f283					      REPEND
    183  f285		       85 02		      sta	WSYNC
    182  f285					      REPEND
    183  f287		       85 02		      sta	WSYNC
    182  f287					      REPEND
    183  f289		       85 02		      sta	WSYNC
    184  f28b					      REPEND
    185  f28b
    186  f28b		       a2 40		      ldx	#%01000000
    187  f28d		       86 0d		      stx	PF0
    188  f28f		       a2 00		      ldx	#%00000000
    189  f291		       86 0e		      stx	PF1
    190  f293		       86 0f		      stx	PF2
    191  f295					      REPEAT	7
    192  f295		       85 02		      sta	WSYNC
    191  f295					      REPEND
    192  f297		       85 02		      sta	WSYNC
    191  f297					      REPEND
    192  f299		       85 02		      sta	WSYNC
    191  f299					      REPEND
    192  f29b		       85 02		      sta	WSYNC
    191  f29b					      REPEND
    192  f29d		       85 02		      sta	WSYNC
    191  f29d					      REPEND
    192  f29f		       85 02		      sta	WSYNC
    191  f29f					      REPEND
    192  f2a1		       85 02		      sta	WSYNC
    193  f2a3					      REPEND
    194  f2a3
    195  f2a3		       a2 20		      ldx	#%00100000
    196  f2a5		       86 0d		      stx	PF0
    197  f2a7		       a2 00		      ldx	#%00000000
    198  f2a9		       86 0e		      stx	PF1
    199  f2ab		       86 0f		      stx	PF2
    200  f2ad					      REPEAT	7
    201  f2ad		       85 02		      sta	WSYNC
    200  f2ad					      REPEND
    201  f2af		       85 02		      sta	WSYNC
    200  f2af					      REPEND
    201  f2b1		       85 02		      sta	WSYNC
    200  f2b1					      REPEND
    201  f2b3		       85 02		      sta	WSYNC
    200  f2b3					      REPEND
    201  f2b5		       85 02		      sta	WSYNC
    200  f2b5					      REPEND
    201  f2b7		       85 02		      sta	WSYNC
    200  f2b7					      REPEND
    201  f2b9		       85 02		      sta	WSYNC
    202  f2bb					      REPEND
    203  f2bb
    204  f2bb		       a2 10		      ldx	#%00010000
    205  f2bd		       86 0d		      stx	PF0
    206  f2bf		       a2 00		      ldx	#%00000000
    207  f2c1		       86 0e		      stx	PF1
    208  f2c3		       86 0f		      stx	PF2
    209  f2c5					      REPEAT	7
    210  f2c5		       85 02		      sta	WSYNC
    209  f2c5					      REPEND
    210  f2c7		       85 02		      sta	WSYNC
    209  f2c7					      REPEND
    210  f2c9		       85 02		      sta	WSYNC
    209  f2c9					      REPEND
    210  f2cb		       85 02		      sta	WSYNC
    209  f2cb					      REPEND
    210  f2cd		       85 02		      sta	WSYNC
    209  f2cd					      REPEND
    210  f2cf		       85 02		      sta	WSYNC
    209  f2cf					      REPEND
    210  f2d1		       85 02		      sta	WSYNC
    211  f2d3					      REPEND
    212  f2d3
    213  f2d3
    214  f2d3
    215  f2d3
    216  f2d3
    217  f2d3
    218  f2d3		       a9 02		      lda	#2
    219  f2d5		       85 01		      sta	VBLANK
    220  f2d7					      REPEAT	30
    221  f2d7		       85 02		      sta	WSYNC
    220  f2d7					      REPEND
    221  f2d9		       85 02		      sta	WSYNC
    220  f2d9					      REPEND
    221  f2db		       85 02		      sta	WSYNC
    220  f2db					      REPEND
    221  f2dd		       85 02		      sta	WSYNC
    220  f2dd					      REPEND
    221  f2df		       85 02		      sta	WSYNC
    220  f2df					      REPEND
    221  f2e1		       85 02		      sta	WSYNC
    220  f2e1					      REPEND
    221  f2e3		       85 02		      sta	WSYNC
    220  f2e3					      REPEND
    221  f2e5		       85 02		      sta	WSYNC
    220  f2e5					      REPEND
    221  f2e7		       85 02		      sta	WSYNC
    220  f2e7					      REPEND
    221  f2e9		       85 02		      sta	WSYNC
    220  f2e9					      REPEND
    221  f2eb		       85 02		      sta	WSYNC
    220  f2eb					      REPEND
    221  f2ed		       85 02		      sta	WSYNC
    220  f2ed					      REPEND
    221  f2ef		       85 02		      sta	WSYNC
    220  f2ef					      REPEND
    221  f2f1		       85 02		      sta	WSYNC
    220  f2f1					      REPEND
    221  f2f3		       85 02		      sta	WSYNC
    220  f2f3					      REPEND
    221  f2f5		       85 02		      sta	WSYNC
    220  f2f5					      REPEND
    221  f2f7		       85 02		      sta	WSYNC
    220  f2f7					      REPEND
    221  f2f9		       85 02		      sta	WSYNC
    220  f2f9					      REPEND
    221  f2fb		       85 02		      sta	WSYNC
    220  f2fb					      REPEND
    221  f2fd		       85 02		      sta	WSYNC
    220  f2fd					      REPEND
    221  f2ff		       85 02		      sta	WSYNC
    220  f2ff					      REPEND
    221  f301		       85 02		      sta	WSYNC
    220  f301					      REPEND
    221  f303		       85 02		      sta	WSYNC
    220  f303					      REPEND
    221  f305		       85 02		      sta	WSYNC
    220  f305					      REPEND
    221  f307		       85 02		      sta	WSYNC
    220  f307					      REPEND
    221  f309		       85 02		      sta	WSYNC
    220  f309					      REPEND
    221  f30b		       85 02		      sta	WSYNC
    220  f30b					      REPEND
    221  f30d		       85 02		      sta	WSYNC
    220  f30d					      REPEND
    221  f30f		       85 02		      sta	WSYNC
    220  f30f					      REPEND
    221  f311		       85 02		      sta	WSYNC
    222  f313					      REPEND
    223  f313
     78  f313
     79  f313							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     80  f313							;; Loop to next frame
     81  f313							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     82  f313		       4c 1b f0 	      jmp	StartFrame
     83  f316
     84  f316							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     85  f316							;; Start a new frame by configuring VBLANK and VSYNC
     86  f316							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     87  f316				   StartFrame1
     88  f316		       a9 02		      lda	#2
     89  f318		       85 01		      sta	VBLANK	; turn VBLANK on
     90  f31a		       85 00		      sta	VSYNC	; turn VSYNC on
     91  f31c
     92  f31c							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     93  f31c							;; Display 3 vertical lines of VSYNC
     94  f31c							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     95  f31c					      REPEAT	3
     96  f31c		       85 02		      sta	WSYNC	; first three VSYNC scanlines
     95  f31c					      REPEND
     96  f31e		       85 02		      sta	WSYNC	; first three VSYNC scanlines
     95  f31e					      REPEND
     96  f320		       85 02		      sta	WSYNC	; first three VSYNC scanlines
     97  f322					      REPEND
     98  f322		       a9 00		      lda	#0
     99  f324		       85 00		      sta	VSYNC	; turn VSYNC off
    100  f326
    101  f326							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    102  f326							;; Let the TIA output the 37 recommended lines of VBLANK
    103  f326							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    104  f326					      REPEAT	37
    105  f326		       85 02		      sta	WSYNC
    104  f326					      REPEND
    105  f328		       85 02		      sta	WSYNC
    104  f328					      REPEND
    105  f32a		       85 02		      sta	WSYNC
    104  f32a					      REPEND
    105  f32c		       85 02		      sta	WSYNC
    104  f32c					      REPEND
    105  f32e		       85 02		      sta	WSYNC
    104  f32e					      REPEND
    105  f330		       85 02		      sta	WSYNC
    104  f330					      REPEND
    105  f332		       85 02		      sta	WSYNC
    104  f332					      REPEND
    105  f334		       85 02		      sta	WSYNC
    104  f334					      REPEND
    105  f336		       85 02		      sta	WSYNC
    104  f336					      REPEND
    105  f338		       85 02		      sta	WSYNC
    104  f338					      REPEND
    105  f33a		       85 02		      sta	WSYNC
    104  f33a					      REPEND
    105  f33c		       85 02		      sta	WSYNC
    104  f33c					      REPEND
    105  f33e		       85 02		      sta	WSYNC
    104  f33e					      REPEND
    105  f340		       85 02		      sta	WSYNC
    104  f340					      REPEND
    105  f342		       85 02		      sta	WSYNC
    104  f342					      REPEND
    105  f344		       85 02		      sta	WSYNC
    104  f344					      REPEND
    105  f346		       85 02		      sta	WSYNC
    104  f346					      REPEND
    105  f348		       85 02		      sta	WSYNC
    104  f348					      REPEND
    105  f34a		       85 02		      sta	WSYNC
    104  f34a					      REPEND
    105  f34c		       85 02		      sta	WSYNC
    104  f34c					      REPEND
    105  f34e		       85 02		      sta	WSYNC
    104  f34e					      REPEND
    105  f350		       85 02		      sta	WSYNC
    104  f350					      REPEND
    105  f352		       85 02		      sta	WSYNC
    104  f352					      REPEND
    105  f354		       85 02		      sta	WSYNC
    104  f354					      REPEND
    105  f356		       85 02		      sta	WSYNC
    104  f356					      REPEND
    105  f358		       85 02		      sta	WSYNC
    104  f358					      REPEND
    105  f35a		       85 02		      sta	WSYNC
    104  f35a					      REPEND
    105  f35c		       85 02		      sta	WSYNC
    104  f35c					      REPEND
    105  f35e		       85 02		      sta	WSYNC
    104  f35e					      REPEND
    105  f360		       85 02		      sta	WSYNC
    104  f360					      REPEND
    105  f362		       85 02		      sta	WSYNC
    104  f362					      REPEND
    105  f364		       85 02		      sta	WSYNC
    104  f364					      REPEND
    105  f366		       85 02		      sta	WSYNC
    104  f366					      REPEND
    105  f368		       85 02		      sta	WSYNC
    104  f368					      REPEND
    105  f36a		       85 02		      sta	WSYNC
    104  f36a					      REPEND
    105  f36c		       85 02		      sta	WSYNC
    104  f36c					      REPEND
    105  f36e		       85 02		      sta	WSYNC
    106  f370					      REPEND
    107  f370
    108  f370		       a9 00		      lda	#0
    109  f372		       85 01		      sta	VBLANK	; turn VBLANK off
    110  f374
    111  f374							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    112  f374							;; Draw the 192 visible scanlines
    113  f374							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    114  f374		       a2 c0		      ldx	#192	; X counter contains the remaining scanlines
    115  f376
    116  f376				   Scanline
    117  f376		       8a		      txa		; transfer X to A
    118  f377		       38		      sec		; make sure carry flag is set
    119  f378		       e5 81		      sbc	PlayerYPos	; subtract sprite Y coordinate
    120  f37a		       c5 80		      cmp	P0Height	; are we inside the sprite height bounds?
    121  f37c		       90 02		      bcc	LoadBitmap	; if result < SpriteHeight, call subroutine
    122  f37e		       a9 00		      lda	#0	; else, set index to 0
    123  f380
    124  f380				   LoadBitmap
    125  f380		       a8		      tay
    126  f381		       b9 d5 f3 	      lda	P0Bitmap,Y	; load player bitmap slice of data
    127  f384
    128  f384		       85 02		      sta	WSYNC	; wait for next scanline
    129  f386
    130  f386		       85 1b		      sta	GRP0	; set graphics for player 0 slice
    131  f388
    132  f388		       b9 de f3 	      lda	P0Color,Y	; load player color from lookup table
    133  f38b
    134  f38b		       85 06		      sta	COLUP0	; set color for player 0 slice
    135  f38d
    136  f38d		       ca		      dex
    137  f38e		       d0 e6		      bne	Scanline	; repeat next scanline until finished
    138  f390
    139  f390							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    140  f390							;; Output 30 more VBLANK overscan lines to complete our frame
    141  f390							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    142  f390				   Overscan
    143  f390		       a9 02		      lda	#2
    144  f392		       85 01		      sta	VBLANK	; turn VBLANK on again for overscan
    145  f394					      REPEAT	30
    146  f394		       85 02		      sta	WSYNC
    145  f394					      REPEND
    146  f396		       85 02		      sta	WSYNC
    145  f396					      REPEND
    146  f398		       85 02		      sta	WSYNC
    145  f398					      REPEND
    146  f39a		       85 02		      sta	WSYNC
    145  f39a					      REPEND
    146  f39c		       85 02		      sta	WSYNC
    145  f39c					      REPEND
    146  f39e		       85 02		      sta	WSYNC
    145  f39e					      REPEND
    146  f3a0		       85 02		      sta	WSYNC
    145  f3a0					      REPEND
    146  f3a2		       85 02		      sta	WSYNC
    145  f3a2					      REPEND
    146  f3a4		       85 02		      sta	WSYNC
    145  f3a4					      REPEND
    146  f3a6		       85 02		      sta	WSYNC
    145  f3a6					      REPEND
    146  f3a8		       85 02		      sta	WSYNC
    145  f3a8					      REPEND
    146  f3aa		       85 02		      sta	WSYNC
    145  f3aa					      REPEND
    146  f3ac		       85 02		      sta	WSYNC
    145  f3ac					      REPEND
    146  f3ae		       85 02		      sta	WSYNC
    145  f3ae					      REPEND
    146  f3b0		       85 02		      sta	WSYNC
    145  f3b0					      REPEND
    146  f3b2		       85 02		      sta	WSYNC
    145  f3b2					      REPEND
    146  f3b4		       85 02		      sta	WSYNC
    145  f3b4					      REPEND
    146  f3b6		       85 02		      sta	WSYNC
    145  f3b6					      REPEND
    146  f3b8		       85 02		      sta	WSYNC
    145  f3b8					      REPEND
    146  f3ba		       85 02		      sta	WSYNC
    145  f3ba					      REPEND
    146  f3bc		       85 02		      sta	WSYNC
    145  f3bc					      REPEND
    146  f3be		       85 02		      sta	WSYNC
    145  f3be					      REPEND
    146  f3c0		       85 02		      sta	WSYNC
    145  f3c0					      REPEND
    146  f3c2		       85 02		      sta	WSYNC
    145  f3c2					      REPEND
    146  f3c4		       85 02		      sta	WSYNC
    145  f3c4					      REPEND
    146  f3c6		       85 02		      sta	WSYNC
    145  f3c6					      REPEND
    146  f3c8		       85 02		      sta	WSYNC
    145  f3c8					      REPEND
    146  f3ca		       85 02		      sta	WSYNC
    145  f3ca					      REPEND
    146  f3cc		       85 02		      sta	WSYNC
    145  f3cc					      REPEND
    146  f3ce		       85 02		      sta	WSYNC
    147  f3d0					      REPEND
    148  f3d0
    149  f3d0							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    150  f3d0							;; Decrement Y-coordinate in each frame for animation effect
    151  f3d0							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    152  f3d0		       c6 81		      dec	PlayerYPos
    153  f3d2
    154  f3d2							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    155  f3d2							;; Loop to next frame
    156  f3d2							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    157  f3d2		       4c 16 f3 	      jmp	StartFrame1
    158  f3d5
    159  f3d5							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    160  f3d5							;; Lookup table for the player graphics bitmap
    161  f3d5							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    162  f3d5
      0  f3d5				   P0Bitmap   P0Bitmap
      1  f3d5		       00		      byte.b	#%00000000
      2  f3d6		       28		      byte.b	#%00101000
      3  f3d7		       74		      byte.b	#%01110100
      4  f3d8		       fa		      byte.b	#%11111010
      5  f3d9		       fa		      byte.b	#%11111010
      6  f3da		       fa		      byte.b	#%11111010
      7  f3db		       fe		      byte.b	#%11111110
      8  f3dc		       6c		      byte.b	#%01101100
      9  f3dd		       30		      byte.b	#%00110000
    164  f3de
    165  f3de							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    166  f3de							;; Lookup table for the player colors
    167  f3de							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      0  f3de				   P0Color    P0Color
      1  f3de		       00		      byte.b	#$00
      2  f3df		       40		      byte.b	#$40
      3  f3e0		       40		      byte.b	#$40
      4  f3e1		       40		      byte.b	#$40
      5  f3e2		       40		      byte.b	#$40
      6  f3e3		       42		      byte.b	#$42
      7  f3e4		       42		      byte.b	#$42
      8  f3e5		       44		      byte.b	#$44
      9  f3e6		       d2		      byte.b	#$D2
    169  f3e7							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    170  f3e7							;; Complete ROM size
    171  f3e7							;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    172  fffc					      org	$fffc
    173  fffc		       00 f0		      .word.w	Reset
    174  fffe		       00 f0		      .word.w	Reset
